# NLP100本ノック
# 
# 25. テンプレートの抽出
# 記事中に含まれる「基礎情報」テンプレートのフィールド名と値を抽出し，
# 辞書オブジェクトとして格納せよ．

# 公式国名が複数行にまたがっているので面倒そう

import re

# のちの問題でも使ったので関数化
def parse_info(text):

    # いったん基礎情報の部分を抜き出す
    pattern_f = re.compile(r"{{基礎情報.+^}}", re.MULTILINE | re.DOTALL)
    text = re.search(pattern_f, text).group()

    # re.split()で各情報ごとに切り取ってから処理したほうがやりやすい
    # が、あえて正規表現を使って一発で取り出すと
    pattern_g = re.compile(r"^\|([^ ]+) = ((.(?!\n\|))+.)(\n(?=\|)|\n(?=}}))", re.M | re.S)
    match_list_temp = re.findall(pattern_g, text)
    match_list = [[i[0], i[1]] for i in match_list_temp]
    return match_list


if __name__ == '__main__':
    f = open("jawiki-britain.txt", "r", encoding="utf-8")
    text = f.read()
    info_list = parse_info(text)
    for info in info_list:
        print("{}: \n{}\n".format(info[0], info[1]))

"""
めも

この問題は要するに、次のテキスト

{{基礎情報 国
|国名 = イギリス
|情報 = グレートブリテン
|公式国名 = イギリス
*英国
*ブリテン
**スコットランド|アイルランド|ウェールズ
|気候 = 穏やか
|産業 = 機械
}}

から、

[[国名, イギリス],
[情報, グレートブリテン],
[公式国名, イギリス\n*英国\n*ブリテン\n**スコットランド|アイルランド|ウェールズ],
[気候, 穏やか],
[産業, 機械]]

と構造化して取り出すことを目指す.

厄介なのが公式国名で,
    ・複数行にまたがっている
    ・各情報の宣言に使われている"|"を中身にも使われている
ということが面倒.

つまり\nに続く|は宣言なので除去、それ以外の|はただのテキストなのでそのままにする必要がある

それを一度に正規表現で表すのは難しいので、re.split("\n\||\n}}"), text)とかで
分割してから処理したほうがやりやすい。
(正規表現"\n\||\n}}"の後半|\n}}は最後の情報の改行の後だけは|ではなく}}が続くため.)


あえて分割せずに一発で抜き出す正規表現

re.compile(r"^\|([^ ]+) = ((.(?!\n\|))+.)(\n(?=\|)|\n(?=}}))", re.M | re.S)

長い.たぶんもっと良い書き方があると思う.
(?=...)とか(?!...)の先読み正規表現を使っている.

"""
